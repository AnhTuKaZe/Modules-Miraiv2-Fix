const path = require("path");
const { mkdirSync, writeFileSync, existsSync, createReadStream, readdirSync } = require("fs-extra")
const axios = require("axios")

module.exports.config = {
    name: "banchim",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "chom",
    description: "...n√≥ gi·ªëng b·∫Øn chim",
    commandCategory: "Game",
    usages: "[]",
    cooldowns: 0
};


module.exports.onLoad = async () => {
    const dir = __dirname + `/banchim/datauser/`;
    const _dir = __dirname + `/banchim/datauser/`;
    const __dir = __dirname + `/banchim/cache/`;
    if (!existsSync(dir)) mkdirSync(dir, { recursive: true });
    if (!existsSync(_dir)) mkdirSync(_dir, { recursive: true });
    if (!existsSync(__dir)) mkdirSync(__dir, { recursive: true });
    return;
}

module.exports.checkPath = function (type, senderID) {
    const pathGame = path.join(__dirname, 'banchim', 'datauser', `${senderID}.json`);
    const pathGame_1 = require("./banchim/datauser/" + senderID + '.json');
    if (type == 1) return pathGame
    if (type == 2) return pathGame_1
}

module.exports.image = async function(link) {
    var images = [];
    let download = (await axios.get(link, { responseType: "arraybuffer" } )).data; 
        writeFileSync( __dirname + `/banchim/cache/banchim.png`, Buffer.from(download, "utf-8"));
        images.push(createReadStream(__dirname + `/banchim/cache/banchim.png`));
    return images
}

module.exports.run = async function ({ api, event, args, client,Threads,__GLOBAL, Users, Currencies,getText }) {
    const { threadID, messageID, senderID } = event;
    const pathData = path.join(__dirname, 'banchim', 'datauser', `${senderID}.json`);
    switch (args[0]) {
        case 'register':
        case '-r': {
            const nDate = new Date().toLocaleString('vi-VN', {
                timeZone: 'Asia/Ho_Chi_Minh'
            });
            if (!existsSync(pathData)) {
                var obj = {};
                obj.name = (await Users.getData(senderID)).name;
                obj.ID = senderID;
                obj.shield = 3
                obj.coins = 20000
                obj.Island = {};
                obj.Island.level = 1
                obj.Island.coinsLV = 200
                obj.Island.data = {};
                obj.Island.data.tower = 0
                obj.Island.data.tree = 0
                obj.Island.data.pool = 0
                obj.Island.data.pet = 0
                obj.spin = 20
                obj.timeRegister = nDate
                writeFileSync(pathData, JSON.stringify(obj, null, 4));
                return api.sendMessage("‚öîÔ∏èƒêƒÉng k√≠ th√†nh c√¥ng", threadID, messageID);
            } else return api.sendMessage("‚öîÔ∏èB·∫°n ƒë√£ c√≥ trong c∆° s·ªü d·ªØ li·ªáu‚öîÔ∏è", threadID, messageID);

        }
        case 'spin': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: `B·∫°n ch∆∞a ƒëƒÉng k√≠ game!`, attachment: await this.image('https://c.tenor.com/4gs3TAnGH0sAAAAi/covid-covid19.gif')}, threadID, messageID);
            }
            if(this.checkPath(2, senderID).spin == 0) return api.sendMessage('B·∫°n ƒë√£ h·∫øt l∆∞·ª£t quay, vui l√≤ng mua th√™m ho·∫∑c ƒë·ª£i 5p h·ªá th·ªëng s·∫Ω t·∫∑ng b·∫°n 5 l∆∞·ª£t', threadID, messageID);
            this.checkPath(2, senderID).spin = parseInt(this.checkPath(2, senderID).spin) - 1;
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(this.checkPath(2, senderID), null, 4));
            var items = [`${this.checkPath(2, senderID).Island.level * 1000} coins`, `${this.checkPath(2, senderID).Island.level * 3000} coins`, `${this.checkPath(2, senderID).Island.level * 5000} coins`, 'c√°i n·ªãt c·ªßa ti·∫øn b·ªãp', 's√∫ng', ' ƒë·∫°n n√¢ng c·∫•p', '1 l∆∞·ª£t quay', '2 l∆∞·ª£t quay', '5 l∆∞·ª£t quay'];
            var getItem = items[Math.floor(Math.random() * items.length)];
            var i = this.getSpin(items, getItem, senderID);
            api.sendMessage({body: `Ch√∫c m·ª´ng b·∫°n quay ch√∫ng : ${getItem}`, attachment: await this.image('https://c.tenor.com/4gs3TAnGH0sAAAAi/covid-covid19.gif')}, threadID, messageID);
            await new Promise(resolve => setTimeout(resolve, 1000));
            const data = readdirSync(__dirname + `/banchim/datauser`);
            if(i == 3) {
                if(data.length < 4) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n server ƒë·ªÉ tr·ªôm chim`, threadID, messageID);
                const dem = [];
                for (let i of data) { 
                    if(i != `${senderID}.json`) {
                        dem.push(require(`./banchim/datauser/${i}`));
                    }
                }
                dem.sort((a, b) => a.coins + b.coins);
                var msg = `S·ªë ti·ªÅn cao nh·∫•t l√†: ${dem[0].coins / 2}\n`
                const randomIndex = dem.sort(function() { return .5 - Math.random() });
                for(var i = 0; i < 3; i ++) {
                    msg += `${i+1}. ${randomIndex[i].name} - Chu·ªìng chim level ${randomIndex[i].Island.level}\n`
                }
                msg += 'Vui l√≤ng reply v·ªõi l·ª±a ch·ªçn b·∫°n mu·ªën tr·ªôm!!'
                return api.sendMessage(`==========\n${msg}`, threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "steal",
                        dem,
                        randomIndex
                    })
                }, messageID);
            }
            else if(i == 5) {
                if(data.length < 4) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n server ƒë·ªÉ t·∫•n c√¥ng chu·ªìng chim`, threadID, messageID);
                var msgf = `[====ATTACK====]\n`, number = 1, p = [];
                for (let i of data) { 
                    if(i != `${senderID}.json`) {
                        var o = require(`./banchim/datauser/${i}`);
                        p.push(o)
                        msgf += `${number++}. ${o.name} - ƒê·∫£o level ${o.Island.level}\n`
                    }
                }
                return api.sendMessage(msgf, threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "attack",
                        p
                    })
                }, messageID);
            }
            break;
        }
        case 'build': 
        case 'xaydung': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://photo-cms-plo.zadn.vn/w559/Uploaded/2022/vrwqqxjwp/2015_01_31/12_ytwh.jpg')}, threadID, messageID);
            }
            var a = require(`./banchim/datauser/${senderID}.json`);
            return api.sendMessage(`B·∫°n mu·ªën x√¢y d·ª±ng ·ªü khu v·ª±c n∆°i n√†o ·ªü chu·ªìng chim!\n1. Th√¢n Chu·ªìng - ${a.Island.coinsLV * (a.Island.data.tower + 1)} coins (${a.Island.data.tower}/50)\n2. C√¢y xanh quanh chu·ªìng cho chim ƒë·∫≠u - ${a.Island.coinsLV * (a.Island.data.tree + 1)} coins(${a.Island.data.tree}/50)\n3.Khu v·ª±c ch∆°i cho chim - ${a.Island.coinsLV * (a.Island.data.pool + 1)} coins (${a.Island.data.pool}/50)\n4. Khu v·ª±c ƒë·ªì ƒÉn cho chim - ${a.Island.coinsLV * (a.Island.data.pet + 1)} coins (${a.Island.data.pet}/50)\n==============`, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "build"
                })
            }, messageID);
        }
        case 'shop': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://static.wikia.nocookie.net/gta/images/6/6b/WeaponRack-GTAV.jpg/revision/latest?cb=20180522025306&path-prefix=vi')}, threadID, messageID);
            }
     return api.sendMessage({body: `‚îÄ‚îÄ [ Banchim Shop ] ‚îÄ‚îÄ  \n\nüê∏Danh s√°ch s√∫ng b·∫°n c√≥ th·ªÉ mua\n[üî´1]. A47K\n[üêâ2]. M4A\n[ü¶ã3].ASM10\n[üéÄ4]. LK24\n[üçÅ5]. Type 25\n[üõ°6]. AK117\n[üß®7]. M16\n[üî™8]. BK57\n[üß¨9]. ICR-1`, attachment: await this.image('https://static.wikia.nocookie.net/gta/images/6/6b/WeaponRack-GTAV.jpg/revision/latest?cb=20180522025306&path-prefix=vi')}, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "shop"
                })
            }, messageID);
        }
        case 'b·∫Øn': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7Y3CRoSY_FkWBbPrXZ1a-siVa_KziUvDMIA&usqp=CAU')}, threadID, messageID);
            }
     return api.sendMessage({body: `‚îÄ‚îÄ [ Banchim Attack ] ‚îÄ‚îÄ  \n\nüê∏Danh s√°ch khu v·ª±c b·∫Øn chim\n[üî´1]. R·ª´ng R·∫≠m Amazon\n[üêâ2]. R·ª´ng nhi·ªát ƒë·ªõi\n[ü¶ã3].khu ƒë·ªìi n√∫i\n`, attachment: await this.image('https://play-lh.googleusercontent.com/7qDDAqGG2LNkgzougZO5kRSu4CuqGTl0yvWE2jhQldbb_JWfIH9vcfwyHEHp9RG3ug=w412-h220-rw')}, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "b·∫Øn"
                })
            }, messageID);
        }
        case 'me':
        case 'info': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://scontent.fhan6-1.fna.fbcdn.net/v/t39.30808-6/275123529_5339827326061697_8913009583387379628_n.jpg?_nc_cat=106&ccb=1-5&_nc_sid=8bfeb9&_nc_ohc=bMtSu2UNpAgAX-Vxlsg&_nc_ht=scontent.fhan6-1.fna&oh=00_AT8JX66T8yoIm8wAzBKBnN3lMfmQBiyODwr90c1BG5nRMA&oe=622AEB91')}, threadID, messageID);
            }
            var a = require(`./banchim/datauser/${senderID}.json`);
            return api.sendMessage(`=====BANCHIM=====\n- B·∫°n ƒëang ·ªü Chu·ªìng level ${a.Island.level}\n- S·ªë l∆∞·ª£t quay c√≤n l·∫°i: ${a.spin}\n- Coins: ${a.coins}\n- Th√¥ng tin Chu·ªìng:\n‚Ä¢ Chu·ªìng (${a.Island.data.tower}/50)\n‚Ä¢ C√¢y xanh cho chim ƒë·∫≠u (${a.Island.data.tree}/50)\n‚Ä¢ Khu v·ª±c ch∆°i cho chim nh·ªè (${a.Island.data.pool}/50)\n‚Ä¢ Khu v·ª±c ƒë·ªì ƒÉn cho chim (${a.Island.data.pet}/50)`, threadID, messageID);
        }
        case 'top': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://scontent.fhan6-1.fna.fbcdn.net/v/t39.30808-6/275123529_5339827326061697_8913009583387379628_n.jpg?_nc_cat=106&ccb=1-5&_nc_sid=8bfeb9&_nc_ohc=bMtSu2UNpAgAX-Vxlsg&_nc_ht=scontent.fhan6-1.fna&oh=00_AT8JX66T8yoIm8wAzBKBnN3lMfmQBiyODwr90c1BG5nRMA&oe=622AEB91')}, threadID, messageID);
            }
            const data = readdirSync(__dirname + `/banchim/datauser`);
            if(data.length < 3) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n server ƒë·ªÉ xem top`, threadID, messageID);
            var p = []
            for (let i of data) { 
                var o = require(`./banchim/datauser/${i}`);
                p.push(o)
                msgf += `${number++}. ${o.name} - ƒê·∫£o level ${o.Island.level}\n`
            }
            p.sort((a, b) => b.Island.level - a.Island.level);
            var msg = '===TOP 3 CHU·ªíNG LEVEL CAO NH·∫§T===\n'
            for(var i = 0; i < 3; i++) {
                msg += `${i+1}. ${p[i].name} v·ªõi ƒë·∫£o level ${p[i].Island.level}\n`
            }
            return api.sendMessage(msg, threadID, messageID);
        }
        default: {
            return api.sendMessage({body: `üçÅB·∫Øn ChimüçÅ\n-üå∏ R: ƒêƒÉng k√≠\n-üå∏ SPIN: V√≤ng quay game\n-üå∏ BUILD: X√¢y d·ª±ng chu·ªìng chim\n-üå∏ SHOP: Shop mua s√∫ng\n-üå∏ INFO: Xem th√¥ng tin v·ªÅ b·∫°n\n- üå∏TOP: Xem top level tr√™n server\n- üå∏CHANGE: Quy ƒë·ªïi ti·ªÅn c·ªßa bot sang ti·ªÅn game v√† ng∆∞·ª£c l·∫°i\nüéÄ ùêåùêöùê§ùêû ùêÅùê≤ ùêÉ-ùêâùêÆùê§ùê¢ùêû üéÄ\n`, attachment: await this.image('https://thaotruong.com/wp-content/uploads/2019/02/ban-vit-1.jpg')}, threadID, messageID);
        }
    }
}
module.exports.handleReply = async ({ event, api, Currencies, handleReply, Users, getText}) => {

  const { body, threadID, messageID, senderID } = event;
  const axios = require('axios');
  const request = require('request');
  const fs = require("fs");
    switch (handleReply.type) {
        case 'build': {
            var a = require(`./banchim/datauser/${senderID}.json`);
            var l = ['tower', 'tree', 'pool', 'pet']
            if(a.coins < a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1)) return api.sendMessage(`B·∫°n kh√¥ng ƒë·ªß s·ªë coins trong game ƒë·ªÉ x√¢y d·ª±ng!`, threadID, messageID);
            a.coins = a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1);
            await Currencies.decreaseMoney(senderID, a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1));
            api.unsendMessage(handleReply.messageID)
            if(body == 1) {
                if(a.Island.data.tower == 50) return api.sendMessage('C·∫•p b·∫≠c khu v·ª±c n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ x√¢y d·ª±ng', threadID, messageID);
                a.Island.data.tower = a.Island.data.tower + 10;
                api.sendMessage(`X√¢y d·ª±ng th√†nh c√¥ng: ${a.Island.data.tower}/50`, threadID, messageID);
            }
            if(body == 2) {
                if(a.Island.data.tree == 50) return api.sendMessage('C·∫•p b·∫≠c khu v·ª±c n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ x√¢y d·ª±ng', threadID, messageID);
                a.Island.data.tree = a.Island.data.tree + 10;
                api.sendMessage(`X√¢y d·ª±ng th√†nh c√¥ng: ${a.Island.data.tree}/50`, threadID, messageID);
            }
            if(body == 3) {
                if(a.Island.data.pool == 50) return api.sendMessage('C·∫•p b·∫≠c khu v·ª±c n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ x√¢y d·ª±ng', threadID, messageID);
                a.Island.data.pool = a.Island.data.pool + 10;
                api.sendMessage(`X√¢y d·ª±ng th√†nh c√¥ng: ${a.Island.data.pool}/50`, threadID, messageID);
            }
            if(body == 4) {
                if(a.Island.data.pet == 50) return api.sendMessage('C·∫•p b·∫≠c khu v·ª±c n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ x√¢y d·ª±ng', threadID, messageID);
                a.Island.data.pet = a.Island.data.pet + 10;
                api.sendMessage(`X√¢y d·ª±ng th√†nh c√¥ng: ${a.Island.data.pet}/50`, threadID, messageID);
            }
            if(a.Island.data.tower == 50 && a.Island.data.tree == 50 && a.Island.data.pool == 50 && a.Island.data.pet == 50) {
                await new Promise(resolve => setTimeout(resolve, 1000));
                api.sendMessage(`X√¢y d·ª±ng chu·ªìng c·ªßa b·∫°n ƒë√£ ƒë·∫°t ƒë∆∞·ª£c c·∫•p t·ªëi ƒëa!\nB·∫°n s·∫Ω ƒë∆∞·ª£c n√¢ng c·∫•p l√™n ƒëÔøΩÔøΩÔøΩo LV ${(a.Island.level) + 1}`, threadID, messageID);
                a.Island.level = a.Island.level + 1;
                a.Island.coinsLV = a.Island.coinsLV + 100;
                a.Island.data.tower = 0;
                a.Island.data.tree = 0;
                a.Island.data.pool = 0;
                a.Island.data.pet = 0;
            }
            return writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
        }
        case 'shop': {
            if(body == 1) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : A47K\n[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, s√°t th∆∞∆°ng v√† ƒë·ªô gi·∫≠t cao.\n[ü©∏]S·ªë dame th·ª±c : 70\n[üõ°]T·ªëc ƒë·ªô b·∫Øn : 55 \n[üß®] ƒê·ªô ch√≠nh x√°c : 48 \n[üî™]Kho·∫£ng c√°ch: 66 \n[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/a47k-800x447.png')}, threadID, messageID);
            }
            else if(body == 2) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : M4A
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, c·ª± ly b·∫Øn trung b√¨nh v·ªõi ƒë·ªô chu·∫©n x√°c cao.
[ü©∏]S·ªë dame th·ª±c : 45
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 60 
[üß®] ƒê·ªô ch√≠nh x√°c : 70 
[üî™]Kho·∫£ng c√°ch: 45 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/m4A-800x447.png')}, threadID, messageID);
            }
            else if(body == 3) {

                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : ASM10
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, ba ph√°t b·∫Øn ch√πm ƒë·∫ßu ti√™n c√≥ ƒë·ªô chu·∫©n x√°c cao.
[ü©∏]S·ªë dame th·ª±c : 60
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 65 
[üß®] ƒê·ªô ch√≠nh x√°c : 51 
[üî™]Kho·∫£ng c√°ch: 55 
[üß¨] ƒê·ªô linh ho·∫°t: 55`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/ASM10-800x447.png')}, threadID, messageID);
             }
            else if(body == 4) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : LK24
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, t·ªëc ƒë·ªô b·∫Øn cao. Hi·ªáu qu·∫£ khi b·∫Øn ·ªü c·ª± ly trung.
[ü©∏]S·ªë dame th·ª±c : 46
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 62 
[üß®] ƒê·ªô ch√≠nh x√°c : 66 
[üî™]Kho·∫£ng c√°ch: 50 `, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/LK24-800x450.png')}, threadID, messageID);
            }
            else if(body == 5) {
                return api.sendMessage({body: `üî´]T√™n : Type 25
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, t·ªëc ƒë·ªô b·∫Øn nhanh v√† ƒë·ªô gi·∫≠t trung b√¨nh.
[ü©∏]S·ªë dame th·ª±c : 55
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 70 
[üß®] ƒê·ªô ch√≠nh x√°c : 44 
[üî™]Kho·∫£ng c√°ch: 35 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/type25-800x447.png')}, threadID, messageID);
            }
            else if(body == 6) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : AK117
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, t·ªëc ƒë·ªô b·∫Øn cao.
[ü©∏]S·ªë dame th·ª±c : 60
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 70 
[üß®] ƒê·ªô ch√≠nh x√°c : 55 
[üî™]Kho·∫£ng c√°ch: 45 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/AK117-800x450.png')}, threadID, messageID);
            }
            else if(body == 7) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : M16
[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng b√°n t·ª± ƒë·ªông v·ªõi kh·∫£ nƒÉng b·∫Øn burst 3 vi√™n. Hi·ªáu qu·∫£ khi b·∫Øn t·ª´ c·ª± ly trung ƒë·∫øn c·ª± ly xa..
[ü©∏]S·ªë dame th·ª±c : 65
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 45 
[üß®] ƒê·ªô ch√≠nh x√°c : 60 
[üî™]Kho·∫£ng c√°ch: 60 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/M16-800x450.png')}, threadID, messageID);
            }
            else if(body == 8) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : BK57
[üçÅ]Th√¥ng Tin : TƒÉng t·ªëc ƒë·ªô di chuy·ªÉn trong kho·∫£ng th·ªùi gian nh·∫•t ƒë·ªãnh l√∫c h·ªìi sinh (n√¢ng c·∫•p s√∫ng level 11).
[ü©∏]S·ªë dame th·ª±c : 48
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 63 
[üß®] ƒê·ªô ch√≠nh x√°c : 65 
[üî™]Kho·∫£ng c√°ch: 50 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('"https://cdn.tgdd.vn/2020/04/content/BK57-800x450.png')}, threadID, messageID);
            }
            else if(body == 9) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : ICR-1
[üçÅ]Th√¥ng Tin : TƒÉng c·ª± ly b·∫Øn c·ªßa v≈© kh√≠.
[ü©∏]S·ªë dame th·ª±c : 45
[üõ°]T·ªëc ƒë·ªô b·∫Øn : 57 
[üß®] ƒê·ªô ch√≠nh x√°c : 76 
[üî™]Kho·∫£ng c√°ch: 48 
[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/ICR1-800x450.png')}, threadID, messageID);
            }
            else {
                return api.sendMessage('L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!', threadID, messageID);
            }
        }

         case 'change': {
            if(body == 1) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë ti·ªÅn b·∫°n mu·ªën ƒë·ªïi! Chi·∫øt kh·∫•u 0%', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "botcoins"
                    })
                }, messageID);
            }
            else if(body == 2) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë ti·ªÅn b·∫°n mu·ªën ƒë·ªïi! Chi·∫øt kh·∫•u 0%', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "coinsbot"
                    })
                }, messageID);
            }
            else if(body == 3) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë l∆∞·ª£t quay b·∫°n mu·ªën mua! (10 l∆∞·ª£t quay 2000$)', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "spinn"
                    })
                }, messageID);
            }
            else {
                return api.sendMessage('L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!', threadID, messageID);
            }
        }
        case 'b·∫Øn': {
            if(body == 1) {
  var coinbanchim = Math.floor(Math.random() * 80000) + 10000;
  var dohiem = Math.floor(Math.random() * 90) + 20;
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üêâ] V·ªã tr√≠ : R·ª´ng r·∫≠m amazon.\n[üî´]B·∫°n ƒë√£ b·∫Øn ch√∫ng con trym ${coinbanchim}$\n[üçÅ] ƒê·ªô hi·∫øm : ${dohiem}%`, attachment: await this.image('https://media3.giphy.com/media/Rs2iAnfEImXIs/giphy.gif?cid=ecf05e47lhtnv5vbbtysfuyatifr6qlvggh2osfg24cxgmz7&rid=giphy.gif&ct=g')}, threadID, messageID);
        }
            else if(body == 2) {
                 return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : A47K\n[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, s√°t th∆∞∆°ng v√† ƒë·ªô gi·∫≠t cao.\n[ü©∏]S·ªë dame th·ª±c : 70\n[üõ°]T·ªëc ƒë·ªô b·∫Øn : 55 \n[üß®] ƒê·ªô ch√≠nh x√°c : 48 \n[üî™]Kho·∫£ng c√°ch: 66 \n[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/a47k-800x447.png')}, threadID, messageID);
        }
            else if(body == 3) {
                return api.sendMessage({body: `----> Th√†nh c√¥ng <---- \n[üî´]T√™n : A47K\n[üçÅ]Th√¥ng Tin : S√∫ng Tr∆∞·ªùng t·ª± ƒë·ªông, s√°t th∆∞∆°ng v√† ƒë·ªô gi·∫≠t cao.\n[ü©∏]S·ªë dame th·ª±c : 70\n[üõ°]T·ªëc ƒë·ªô b·∫Øn : 55 \n[üß®] ƒê·ªô ch√≠nh x√°c : 48 \n[üî™]Kho·∫£ng c√°ch: 66 \n[üß¨] ƒê·ªô linh ho·∫°t: 60`, attachment: await this.image('https://cdn.tgdd.vn/2020/04/content/a47k-800x447.png')}, threadID, messageID);
            }
        }        
        case 'spinn': {
            await checkMoney(senderID, parseInt(body));
            api.unsendMessage(handleReply.messageID)
            await Currencies.decreaseMoney(senderID, parseInt(body));
            a.spin = a.spin + parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`Mua th√†nh c√¥ng ${body} l∆∞·ª£t quay (${parseInt(body) * 200}$`, threadID, messageID);
        }
        case 'botcoins': {
            var a = require(`./banchim/datauser/${senderID}.json`);
            await checkMoney(senderID, parseInt(body));
            api.unsendMessage(handleReply.messageID)
            await Currencies.decreaseMoney(senderID, parseInt(body));
            a.coins = a.coins + parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`N·∫°p th√†nh c√¥ng ${body} coins v√†o game!`, threadID, messageID);
        }
        case 'coinsbot': {
            var a = require(`./banchim/datauser/${senderID}.json`);
            if(a.coins < parseInt(body)) return api.sendMessage('B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch n√†y!', threadID, messageID);
            api.unsendMessage(handleReply.messageID)
            await Currencies.increaseMoney(senderID, parseInt(body));
            a.coins = a.coins - parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`R√∫t th√†nh c√¥ng ${body} coins v·ªÅ t√†i kho·∫£n bot!`, threadID, messageID);
        }
    }
    async function checkMoney(senderID, maxMoney) {
        var i, w;
        i = (await Currencies.getData(senderID)) || {};
        w = i.money || 0
        if (w < parseInt(maxMoney)) return api.sendMessage('B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch n√†y!', threadID, messageID);
    }
}
module.exports.getSpin = function (items, getItem, senderID) {
    const path = this.checkPath(1, senderID)
    var pathData = this.checkPath(2, senderID)
    var i = items.findIndex(index => index == getItem);
    if(i == 0) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 1000
    if(i == 1) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 3000
    if(i == 2) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 5000
    if(i == 4) {
        if(pathData.shield != 3) {
            pathData.spin = parseInt(pathData.spin) + 1
            pathData.shield = parseInt(pathData.shield) + 1;
        }
    }
    if(i == 6) pathData.spin = parseInt(pathData.spin) + 1
    if(i == 7) pathData.spin = parseInt(pathData.spin) + 2
    if(i == 8) pathData.spin = parseInt(pathData.spin) + 5
    writeFileSync(path, JSON.stringify(pathData, null, 4));
    return i
} 